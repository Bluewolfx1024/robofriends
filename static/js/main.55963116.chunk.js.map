{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/Card.js","components/ErrorBoundry.js","components/CardList.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Card","Component","name","email","id","alt","src","CardList","robots","map","user","i","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdG,SAAC,GAAsB,IAAnBC,EAAkB,EAAlBA,aAErB,OACC,qBAAKC,UAAU,SAAf,SACA,uBACCA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCGEK,EAXA,SAACC,GAEf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACCJ,EAAMK,YCQMC,GCZYC,YDAd,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKf,UAAU,6CAAf,UACC,qBAAKgB,IAAI,SAASC,IAAG,+BAA0BF,EAA1B,cACrB,gCACC,6BAAKF,IACL,4BAAIC,YEmBOI,EAvBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEnB,OACC,gCAEAA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OACC,cAAC,EAAD,CACAP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHNQ,MAJZ,QC8CaC,G,wDA3Cd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACZX,OAAQ,GACRQ,YAAY,IAJA,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAAEP,OAAQgB,S,oBAQvC,WACC,MAAgCC,KAAKN,MAA7BX,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,YACVU,EAAiBlB,EAAOmB,QAAO,SAAAC,GACpC,OAAOA,EAAM1B,KAAK2B,cAAcC,SAASd,EAAYa,kBAEtD,OAAQrB,EAAOuB,OAId,sBAAK1C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAcqC,KAAKZ,iBAC9B,cAAC,EAAD,UAEE,cAAC,EAAD,CAAUL,OAASkB,SARtB,6C,GA1BezB,cCGH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAEdC,SAASC,eAAe,SAK1BX,M","file":"static/js/main.55963116.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ( { searchChange }) =>{\r\n\r\n\treturn(\r\n\t\t<div className='tc pa2'>\r\n\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots'\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\r\n\treturn(\r\n\t\t<div style={{ overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n\t\t{props.children}\r\n\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t}\r\n}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true })\r\n\t}\r\n\r\n\t\trender() {\r\n\t\t\tif (this.state.hasError) {\r\n\t\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t\t}\r\n\t\t return this.props.childern\r\n\t\t}\r\n\t}\r\n\r\n\r\nexport default ErrorBoundry;\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\trobots.map((user, i) => {\r\n\t\treturn ( \r\n\t\t\t<Card key={i} \r\n\t\t\tid={robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail={robots[i].email} \r\n\t\t\t/>\r\n\t\t\t);\r\n\t\t})\r\n\t} </div>\r\n\t\t\r\n\r\n\t)\r\n\r\n\t \t}\r\n\t\r\n\r\n\r\nexport default CardList;","import React, { Component } from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport CardList from '../components/CardList';\r\nimport './App.css';\r\n\r\n\t\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield:''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users=> this.setState({ robots: users }));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value})\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn !robots.length ?\r\n\t\t\t<h1>Loading</h1> :\r\n\t\t\t\r\n\t\t (\r\n\t\t\t<div className='tc'>\r\n\t\t\t\t<h1 className='f1' >RoboFriends</h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t\t{/*<ErrorBoundry>*/}\r\n\t\t\t\t\t\t<CardList robots={ filteredRobots } />\r\n\t\t\t\t\t{/*</ErrorBoundry>*/}\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />\n\t\n\t,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// change\n"],"sourceRoot":""}